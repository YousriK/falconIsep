package com.falcon.avisep.domain;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import java.util.Objects;

/**
 * A AdminAvis.
 */
@Entity
@Table(name = "admin_avis")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class AdminAvis implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
    @SequenceGenerator(name = "sequenceGenerator")
    private Long id;

    @Column(name = "admin_id")
    private Integer adminId;

    @OneToMany(mappedBy = "admin")
    @JsonIgnore
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
    private Set<Form> forms = new HashSet<>();

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getAdminId() {
        return adminId;
    }

    public AdminAvis adminId(Integer adminId) {
        this.adminId = adminId;
        return this;
    }

    public void setAdminId(Integer adminId) {
        this.adminId = adminId;
    }

    public Set<Form> getForms() {
        return forms;
    }

    public AdminAvis forms(Set<Form> forms) {
        this.forms = forms;
        return this;
    }

    public AdminAvis addForm(Form form) {
        this.forms.add(form);
        form.setAdmin(this);
        return this;
    }

    public AdminAvis removeForm(Form form) {
        this.forms.remove(form);
        form.setAdmin(null);
        return this;
    }

    public void setForms(Set<Form> forms) {
        this.forms = forms;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdminAvis adminAvis = (AdminAvis) o;
        if (adminAvis.id == null || id == null) {
            return false;
        }
        return Objects.equals(id, adminAvis.id);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    @Override
    public String toString() {
        return "AdminAvis{" +
            "id=" + id +
            ", adminId='" + adminId + "'" +
            '}';
    }
}
