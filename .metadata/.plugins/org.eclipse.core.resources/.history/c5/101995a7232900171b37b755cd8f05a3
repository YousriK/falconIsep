package com.falcon.avisep.domain;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.util.Objects;

/**
 * A Evaluation.
 */
@Entity
@Table(name = "evaluation")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Evaluation implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
    @SequenceGenerator(name = "sequenceGenerator")
    private Long id;

    @Column(name = "evaluation_id")
    private Integer evaluationId;

    @Column(name = "e_data")
    private String eData;

    @ManyToOne
    private Salle salle;

    @ManyToOne
    private Cours cours;

    @ManyToOne
    private Module module;

    @ManyToOne
    private Classe classe;

    @ManyToOne(optional = false)
    @NotNull
    private UserAvis user;

    @ManyToOne
    private Question question;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getEvaluationId() {
        return evaluationId;
    }

    public Evaluation evaluationId(Integer evaluationId) {
        this.evaluationId = evaluationId;
        return this;
    }

    public void setEvaluationId(Integer evaluationId) {
        this.evaluationId = evaluationId;
    }

    public String geteData() {
        return eData;
    }

    public Evaluation eData(String eData) {
        this.eData = eData;
        return this;
    }

    public void seteData(String eData) {
        this.eData = eData;
    }

    public Salle getSalle() {
        return salle;
    }

    public Evaluation salle(Salle salle) {
        this.salle = salle;
        return this;
    }

    public void setSalle(Salle salle) {
        this.salle = salle;
    }

    public Cours getCours() {
        return cours;
    }

    public Evaluation cours(Cours cours) {
        this.cours = cours;
        return this;
    }

    public void setCours(Cours cours) {
        this.cours = cours;
    }

    public Module getModule() {
        return module;
    }

    public Evaluation module(Module module) {
        this.module = module;
        return this;
    }

    public void setModule(Module module) {
        this.module = module;
    }

    public Classe getClasse() {
        return classe;
    }

    public Evaluation classe(Classe classe) {
        this.classe = classe;
        return this;
    }

    public void setClasse(Classe classe) {
        this.classe = classe;
    }

    public UserAvis getUser() {
        return user;
    }

    public Evaluation user(UserAvis userAvis) {
        this.user = userAvis;
        return this;
    }

    public void setUser(UserAvis userAvis) {
        this.user = userAvis;
    }

    public Question getQuestion() {
        return question;
    }

    public Evaluation question(Question question) {
        this.question = question;
        return this;
    }

    public void setQuestion(Question question) {
        this.question = question;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Evaluation evaluation = (Evaluation) o;
        if (evaluation.id == null || id == null) {
            return false;
        }
        return Objects.equals(id, evaluation.id);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    @Override
    public String toString() {
        return "Evaluation{" +
            "id=" + id +
            ", evaluationId='" + evaluationId + "'" +
            ", eData='" + eData + "'" +
            '}';
    }
}
