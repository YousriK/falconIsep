package com.falcon.avisep.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import java.util.Objects;

import com.falcon.avisep.domain.enumeration.RoleAvis;

/**
 * A UserAvis.
 */
@Entity
@Table(name = "user_avis")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class UserAvis implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
    @SequenceGenerator(name = "sequenceGenerator")
    private Long id;

    @Column(name = "last_name")
    private String lastName;

    @Column(name = "login")
    private String login;

    @Column(name = "first_name")
    private String firstName;

    @Column(name = "email")
    private String email;

    @Column(name = "passwd")
    private String passwd;

    @Enumerated(EnumType.STRING)
    @Column(name = "role_avis")
    private RoleAvis roleAvis;

    @OneToMany(mappedBy = "user")
    @JsonIgnore
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
    private Set<Evaluation> evaluations = new HashSet<>();

    @ManyToMany
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
    @JoinTable(name = "user_avis_classe",
               joinColumns = @JoinColumn(name="user_avis_id", referencedColumnName="id"),
               inverseJoinColumns = @JoinColumn(name="classes_id", referencedColumnName="id"))
    private Set<Classe> classes = new HashSet<>();

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getLastName() {
        return lastName;
    }

    public UserAvis lastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getLogin() {
        return login;
    }

    public UserAvis login(String login) {
        this.login = login;
        return this;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getFirstName() {
        return firstName;
    }

    public UserAvis firstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getEmail() {
        return email;
    }

    public UserAvis email(String email) {
        this.email = email;
        return this;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPasswd() {
        return passwd;
    }

    public UserAvis passwd(String passwd) {
        this.passwd = passwd;
        return this;
    }

    public void setPasswd(String passwd) {
        this.passwd = passwd;
    }

    public RoleAvis getRoleAvis() {
        return roleAvis;
    }

    public UserAvis roleAvis(RoleAvis roleAvis) {
        this.roleAvis = roleAvis;
        return this;
    }

    public void setRoleAvis(RoleAvis roleAvis) {
        this.roleAvis = roleAvis;
    }

    public Set<Evaluation> getEvaluations() {
        return evaluations;
    }

    public UserAvis evaluations(Set<Evaluation> evaluations) {
        this.evaluations = evaluations;
        return this;
    }

    public UserAvis addEvaluation(Evaluation evaluation) {
        this.evaluations.add(evaluation);
        evaluation.setUser(this);
        return this;
    }

    public UserAvis removeEvaluation(Evaluation evaluation) {
        this.evaluations.remove(evaluation);
        evaluation.setUser(null);
        return this;
    }

    public void setEvaluations(Set<Evaluation> evaluations) {
        this.evaluations = evaluations;
    }

    public Set<Classe> getClasses() {
        return classes;
    }

    public UserAvis classes(Set<Classe> classes) {
        this.classes = classes;
        return this;
    }

    public UserAvis addClasse(Classe classe) {
        this.classes.add(classe);
        classe.getUserAvis().add(this);
        return this;
    }

    public UserAvis removeClasse(Classe classe) {
        this.classes.remove(classe);
        classe.getUserAvis().remove(this);
        return this;
    }

    public void setClasses(Set<Classe> classes) {
        this.classes = classes;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserAvis userAvis = (UserAvis) o;
        if (userAvis.id == null || id == null) {
            return false;
        }
        return Objects.equals(id, userAvis.id);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    @Override
    public String toString() {
        return "UserAvis{" +
            "id=" + id +
            ", lastName='" + lastName + "'" +
            ", login='" + login + "'" +
            ", firstName='" + firstName + "'" +
            ", email='" + email + "'" +
            ", passwd='" + passwd + "'" +
            ", roleAvis='" + roleAvis + "'" +
            '}';
    }
}
